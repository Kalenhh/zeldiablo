PREMIERE FONCTIONNALITE : Afficher le monstre (Nathan & Mathieu)
--> Le jeu doit afficher le monstre à sa position.

Critères de validation :
- le monstre doit être affiché à la bonne position dans le labyrinthe.
- le monstre sera représenté sous la forme d'un personnage violet de la taille du personnage.
(Nous avons 2 types de monstres, l'un rouge et l'autre jaune)


DEUXIEME FONCTIONNALITE : Génération de monstres immobiles (Melody)
--> Au lancement du jeu, le jeu ajoute différents monstres immobiles dans l'environnement.

Critères de validation :
• Il est possible de construire un labyrinthe par défaut contenant quelques monstres
(le labyrinthe par défaut est à définir).
• Les monstres sont créés sur des cases vides.
• Il n'est pas possible de générer des monstres sur des cases non vides (position du
joueur, d'autres monstres ou de murs)
• Les monstres doivent apparaitre dans l'interface graphique sous la forme d'un
cercle rouge.
• Les monstres ne se déplacent pas (mais attaquent éventuellement le héros s'il passe
à proximité - cf taches attaque dans les parties suivantes).

Difficultés rencontrées :
Aucune difficulté.


TROISIEME FONCTIONNALITE : Attaque des monstres (Nathan & Melody)
--> Lorsqu'un monstre doit agir, si le monstre se trouve à coté du héros, alors il ne se
déplace pas mais il attaque celui-ci.

Critères de validation :
• Lorsque le monstre est à côté du joueur, il attaque et ne se déplace pas. Par défaut,
le Héros perd 1 point de vie.
• Lorsque le monstre est loin du joueur, il n'attaque pas mais se déplace.

Difficultés rencontrées :
La principale difficulté était de détecter l'arrivée du joueur pour l'attaquer dès qu'il se trouve
à proximité.


QUATRIEME FONCTIONNALITE : Mort des monstres (Hugo et Mathieu)
--> Lorsqu'un monstre n'a plus de points de vie, il meurt et disparaît du jeu.

Critères de validation :
• Les monstres ont par défaut 2 points de vie et ne peuvent pas avoir de points de
vie négatifs.
• Lorsqu'un monstre par défaut est touché deux fois, il disparait.
• Le héros attaque avant le monstre, si le monstre meurt, le monstre n'a pas le
temps de répliquer et disparait avant.

Difficultés rencontrées :
J'ai pris du temps à comprendre que je pouvais utiliser l'attribut Grid. A partir de ça,
j'ai pu directement retirer l'élément monstre du labyrinthe sur la position.